plugins {
    id 'java'
    id 'com.bmuschko.docker-remote-api' version '6.7.0'
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

ext {
    repo = "dariusandz/serverless-benchmark"
    tag = "s3"
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    implementation platform('software.amazon.awssdk:bom:2.10.73')
    implementation platform('com.amazonaws:aws-xray-recorder-sdk-bom:2.4.0')

    implementation 'com.amazonaws:aws-lambda-java-runtime-interface-client:1.0.0'

    implementation 'software.amazon.awssdk:lambda'
    implementation 'com.amazonaws:aws-lambda-java-runtime-interface-client:1.0.0'

    compile "com.amazonaws:aws-java-sdk:1.11.939"
    compile "com.amazonaws:aws-java-sdk-sts:1.11.939"
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.runtimeClasspath.files.collect {
                    it.getName()
                }.join(' ')
        )

    }
}

task copyRuntimeDependencies(type: Copy) {
    from configurations.runtimeClasspath
    into 'build/dependency'
}

task buildDocker(type: DockerBuildImage, dependsOn: ['copyRuntimeDependencies', 'jar', 'check', 'build']) {
    if (project.hasProperty("docker-repo")) {
        repo = project.getProperty("docker-repo")
    }
    images = ["${repo}:${tag}"]
    inputDir = buildDir.parentFile
}

